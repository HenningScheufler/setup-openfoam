name: Setup OpenFOAM
description: Set up a specific version of OpenFOAM
inputs:
  openfoam-version:
    description: Version of OpenFOAM to set up
  cache:
    description: Whether to cache the OpenFOAM installation for future runs
    default: true
branding:
  icon: grid
  color: blue
runs:
  using: "composite"
  steps:
    - name: Install Linux prerequisites
      if: runner.os != 'macOS'
      uses: gerlero/apt-install@v1
      with:
        packages: ca-certificates
        upgrade: false
        install-recommends: false
        cache: ${{ inputs.cache == 'true' }}
    - name: Prepare
      id: prep
      run: |
        sudo() {
          if [ $(id -u) -eq 0 ]; then
            "$@"
          else
            command sudo "$@"
          fi
        }

        if [ $(uname) == "Darwin" ]; then
          brew tap gerlero/openfoam
          echo "openfoam-app-version=$(brew info gerlero/openfoam/openfoam | head -n 1 | awk '{print $3}')" >> "$GITHUB_OUTPUT"
          echo "openfoam-etc=/Applications/OpenFOAM-v${{ inputs.openfoam-version }}.app/Contents/Resources/etc" >> "$GITHUB_OUTPUT"
        elif [ ${{ inputs.openfoam-version }} -lt 1000 ]; then
          sudo cp $GITHUB_ACTION_PATH/gpg.key /etc/apt/trusted.gpg.d/setup-openfoam-org.asc
          sudo bash -c "echo \"deb [arch=$(dpkg --print-architecture)] http://dl.openfoam.org/ubuntu $(sed -ne 's/^VERSION_CODENAME=//p' /etc/os-release) main\" > /etc/apt/sources.list.d/setup-openfoam-org.list"
          echo "apt-package=openfoam${{ inputs.openfoam-version }}" >> $GITHUB_OUTPUT
          echo "openfoam-etc=/opt/openfoam${{ inputs.openfoam-version }}/etc" >> "$GITHUB_OUTPUT"
        else
          sudo cp $GITHUB_ACTION_PATH/pubkey.gpg /etc/apt/trusted.gpg.d/setup-openfoam-com.asc
          sudo bash -c "echo \"deb [arch=$(dpkg --print-architecture)] https://dl.openfoam.com/repos/deb $(sed -ne 's/^VERSION_CODENAME=//p' /etc/os-release) main\" > /etc/apt/sources.list.d/setup-openfoam-com.list"
          echo "apt-package=openfoam${{ inputs.openfoam-version }}-default" >> $GITHUB_OUTPUT
          echo "openfoam-etc=/usr/lib/openfoam/openfoam${{ inputs.openfoam-version }}/etc" >> "$GITHUB_OUTPUT"
        fi
      shell: bash
    - name: Install OpenFOAM on Linux
      if: steps.prep.outputs.apt-package
      uses: gerlero/apt-install@v1
      with:
        packages: ${{ steps.prep.outputs.apt-package }}
        install-recommends: false
        cache: ${{ inputs.cache == 'true' }}
    - name: Restore OpenFOAM on macOS from cache
      if: runner.os == 'macOS' && inputs.cache == 'true'
      id: cache-macos
      uses: actions/cache/restore@v4
      with:
        path: /Applications/OpenFOAM-v${{ inputs.openfoam-version }}.app
        key: setup-openfoam-${{ runner.os }}-${{ runner.arch }}-${{ inputs.openfoam-version }}-${{ steps.prep.outputs.openfoam-app-version }}
    - name: Install OpenFOAM on macOS
      if: runner.os == 'macOS' && steps.cache-macos.outputs.cache-hit != 'true'
      run: |
        brew install --no-quarantine gerlero/openfoam/openfoam@${{ inputs.openfoam-version }}
      shell: bash
    - name: Save OpenFOAM on macOS to cache
      if: runner.os == 'macOS' && inputs.cache == 'true' && steps.cache-macos.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: /Applications/OpenFOAM-v${{ inputs.openfoam-version }}.app
        key: ${{ steps.cache-macos.outputs.cache-primary-key }}
    - name: Activate OpenFOAM for future steps
      run: |
        old_path="$PATH"
        source "${{ steps.prep.outputs.openfoam-etc }}/bashrc" || true

        for var in "${!WM_@}"; do
          echo "$var=${!var}" >> "$GITHUB_ENV"
        done

        for var in "${!FOAM_@}"; do
          echo "$var=${!var}" >> "$GITHUB_ENV"
        done

        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> "$GITHUB_ENV"

        echo "${PATH/%:$old_path}" >> "$GITHUB_PATH"
      shell: bash
    - name: Add openfoam command to PATH
      if: inputs.openfoam-version >= 1000
      run: |
        mkdir -p ~/.setup-openfoam/bin

        cat << 'EOF' > ~/.setup-openfoam/bin/openfoam${{ inputs.openfoam-version }}
        #!/bin/bash
        exec "${{ steps.prep.outputs.openfoam-etc }}/openfoam" "$@"
        EOF
        chmod +x ~/.setup-openfoam/bin/openfoam${{ inputs.openfoam-version }}

        ln -sf ~/.setup-openfoam/bin/openfoam${{ inputs.openfoam-version }} ~/.setup-openfoam/bin/openfoam

        echo ~/.setup-openfoam/bin >> "$GITHUB_PATH"
      shell: bash
